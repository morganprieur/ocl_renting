# version: "3.9"
   
services:
  # db:
  #   image: oc-lettings-site.sqlite3
  #   # image: sqlite
  #   volumes:
  #     - oc-lettings-site.sqlite3:/var/lib/sqlite/data
  #     # - ./volumes/sqlite:/var/lib/sqlite/data
  #   # environment:
  #     # - POSTGRES_DB=${POSTGRES_DB}
  #     # - POSTGRES_USER=${POSTGRES_USER}
  #     # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  web:
    build: .
    # command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:${API_PORT}"
    volumes:
      - .:/code
    ports:
      - 8000:8000
    # environment:
      # - POSTGRES_DB=${POSTGRES_DB}
      # - POSTGRES_USER=${POSTGRES_USER}
      # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_SERVICE_NAME=${POSTGRES_SERVICE_NAME}
    # depends_on:
    #   - db



# # https://www.youtube.com/watch?v=UGnNGvEXlFY
# # Tuto https://hackernoon.com/fr/comment-dockeriser-et-d%C3%A9ployer-des-applications-Django 
# version: "3.9" 

# services: 
#   web: 
#     build: . 
#     ports: 
#       -"8000:8000" 
#     volumes: 
#       -./:/app 
    # command: python3.9 manage.py runserver 127.0.0.1:8000

#   db: 
#     image: 
#       postgres:14.0-alpine 
#     volumes: 
#       -./postgres:/var/lib/postgresql/data

# # https://www.youtube.com/watch?v=UGnNGvEXlFY
# ...
#   db: 
#   image: nouchka/sqlite3:latest
#   volumes: 
#     - ./data/db:/root/db 
#   environment: 
#     - SQLITE3_DB=db.sqlite3 
  # web: 
  # ...
  #   depends_on:
  #     - db 



